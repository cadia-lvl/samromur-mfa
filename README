# Preparation for Montreal Forced Alignment with Samromur dataset
This tool is to align and segmentate a dataset of audio files to prepare it for Kaldi using Montreal Forced Alignment (MFA). 

The purpose of this tool is to automatically generate an acoustic model for the data and all the files required from audio files and the metadata. In the end, we will have a folder in the following structure.

# Requirements
## Input data

The input is a folder with multiple speakers, for which there are one or several audio file. An audio file is made up of a sentence, spoke in Icelandic. To use this tool, the data has to be in this form :

'''
metadata.tsv
data_folder/
├── id_user_1/
│   ├── id_user_1-id_file_1.flac
│   ├── id_user_1-id_file_2.flac
│   └── id_user_1-id_file_3.flac
├── id_user_2/
│   ├── id_user_2-id_file_4.flac
│   ├── id_user_2-id_file_5.flac
│   ├── id_user_2-id_file_6.flac
│   ├── id_user_2-id_file_7.flac
│   └── id_user_2-id_file_8.flac
├── id_user_3/
│   ├── id_user_3-id_file_9.flac
│   └── id_user_3-id_file_10.flac
├── id_user_4/
│   ├── id_user_4-id_file_11.flac
│   ├── id_user_4-id_file_12.flac
│   ├── id_user_4-id_file_13.flac
│   ├── id_user_4-id_file_14.flac
│   └── id_user_4-id_file_15.flac
├── ...
'''

Another file is required to use this tool : a metadata file, containing the utterances said in the audio files. This file has to be in the shape of a table, so that python can read it as a Dataframe :

'''
    speaker_id             filename                                           sentence  ...    size user_agent status
id                                                                                      ...                          
2            1  000001-0000002.flac  Því sést hún oft á helgimyndum með augu sín á ...  ...  147918        NAN   test
3            1  000001-0000003.flac        Bettý er sjöunda bók Arnaldar Indriðasonar.  ...  140238        NAN   test
4            1  000001-0000004.flac  Afar hafa sitt eigið tungumál og sérstaka menn...  ...  147918        NAN   test
6            2  000002-0000006.flac  Fyrsta fullorðinstönnin kemur við sex ára aldu...  ...  158456        NAN   test
7            2  000002-0000007.flac      Landið var þá kallað „Sviss Mið-Austurlanda“.  ...  137976        NAN   test
'''

**IMPORTANT** : The data folder and the metadata file should be in the same folder, so that the program can read them.

## JASON file

All the information that can varies in the project are inside the info.json file :

'''
{
    "path_to_data": "path/to/data/",
    "output_folder": "output_test",
    "data_folder": "data_test",
    "empty_audio_user": "empty_data_test",
    "audio_extension": "flac",
    "lexicon_file": "lexicon.lex",
    "dictionary_file": "icelandic.dict",
    "MFA_model_name": "mfa_model",
    "metadata_file": {
        "name": "metadata.tsv",
        "columns_utt_name": "sentence_norm",
        "sep": "\t"
    }
}
'''

It is necessary to adapt the informations inside it as your case, in order for all the files to work. We will list here the elements included in the files, with a description of them.
- **path_to_data** : the path to the input data (which contain the folder of audio files _and_ the metadata file;
- **output_folder** : the name of the folder which will contain all the align and segmented files;
- **data_folder** : the name of the folder containing the audio files;
- **empty_audio_user** : the name of the folder which will eventually contain the audio files of the data that has not been segmented;
- **audio_extension** : the extension of the audio files;
- **lexicon_file** : the name of the file which will contain the lexicon of the input data;
- **dictionary_file** : name of the file which will contain the lexicon plus the phonemes of each word;
- **MFA_model_name*** : name of the model created by the MFA;
- **metadata_file** :
	- **name** : name of the metadata file;
	- **columns_utt_name** : name of the columns that contains the **normalized** utterances of each audio files;
	- **sep** : separator of the data.

# Running




# Table of Contents
[Easy to use TOC generator](https://ecotrust-canada.github.io/markdown-toc/)

# Installation

* software requirements
* dependencies

It is also helpful to provide commands which assist user installing the program or even providing an `install.sh` script which does it for the user.

# Running
How to run the program/application/model and common use-cases and outputs.
For the program to be easily usable this section can be quite long.
Make sure to include explenations for all coding examples since it makes them much more understandable. 

## API reference (Optional)
If lengthy, this should be a separate document placed as HTML into the `docs/` folder. For more inforation see `documentation`

# License
Mention which LICENSE the code uses and refer to the LICENSE file. For more information about licensing later.

# Authors/Credit
Reykjavik University

Main authors <email.addresses>

## Acknowledgements
If the funding is from a public grant, mention the source of the funding and link to their website.

"This project was funded by the Language Technology Programme for Icelandic 2019-2023. The programme, which is managed and coordinated by [Almannarómur](https://almannaromur.is/), is funded by the Icelandic Ministry of Education, Science and Culture."

# Contributing (Optional)
Explain how people can contribute to this repository. This can also link to a separate Developer reference (Contributing.md)

* how to contribute
* creating issues
* where to get data
* testing

## Description of folder structure (Optional)

# Changelog/Versions (Optional)
# Papers/References (Optional)

You would have a citation snippet here as a code block. For papers not yet accepted it is fine to mention you have submitted a paper to a particular conference and mention how you will reference it once has been accepted. For example you could add a citation or include the paper in the docs folder. 
``